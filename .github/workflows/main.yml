name: Build and Deploy Java App

on:
  push:
    branches: [ "main" ]   # Trigger on main branch push (change if needed)
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Setup JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Cache Maven dependencies
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    # 4. Build with Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # 5. Verify WAR output
    - name: List target files
      run: ls -l target
   
    - name: Check WAR file existence
      run: |
          if [ ! -f target/*.war ]; then
          echo "ERROR: WAR file not found!"
          exit 1
          fi
          echo "WAR file path: ${{ steps.war_file.outputs.WAR_FULLPATH }}"
          
    # 6. Upload WAR to Jenkins
    - name: Get Jenkins Crumb
      id: crumb
      run: |
          CRUMB=$(curl -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
          "https://tigers-palestinian-layer-itunes.trycloudflare.com/crumbIssuer/api/json" | jq -r .crumb)
          echo "CRUMB=$CRUMB" >> $GITHUB_OUTPUT
          
    - name: Send WAR to Jenkins with Crumb
      run: |
          WAR_FILE=$(ls target/*.war | head -n 1)
          curl -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
          -H "Jenkins-Crumb: ${{ steps.crumb.outputs.CRUMB }}" \
          -F "WAR_FILE=@${WAR_FILE}" \
          "https://tigers-palestinian-layer-itunes.trycloudflare.com/job/Project2/buildWithParameters?token=auth123"
